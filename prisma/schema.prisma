generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int       @id @unique @default(autoincrement())
  firstName   String
  lastName    String
  email       String    @unique
  password    String    @db.Text
  imageUrl    String?
  age         Int?
  address     String?
  state       String?
  city        String?
  zip         Int?
  phoneNumber String?
  role        Role?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orders      Order[]
  accounts    Account[]
  sessions    Session[]
}

model Order {
  id         String   @id @default(uuid())
  customerId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  customer User @relation(fields: [customerId], references: [id])

  @@index([customerId])
}

model Store {
  id            Int       @id @unique @default(autoincrement())
  storeName     String    @unique
  storeCategory String
  storeImageUrl String    @db.Text
  owner         Owner     @relation(fields: [id], references: [id])
  products      Product[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Product {
  id          Int      @id @unique @default(autoincrement())
  productName String
  category    String
  quantity    Int
  stock       Boolean
  store       Store    @relation(fields: [id], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Owner {
  id         Int      @id @unique @default(autoincrement())
  ownerEmail String
  stores     Store[]
  planType   Plan     @relation(fields: [id], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Plan {
  id              Int      @id @unique @default(autoincrement())
  planName        String   @unique
  planDescription String
  planPrice       Float
  planType        PlanType
  owner           Owner?
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  USER
  SELLER
}

enum PlanType {
  FREE
  PRO
  BUSINESS
}
